<div id="videos-container"></div>
<button id="setup-new-broadcast" class="setup">Begin Streaming!</button>
<script src="https://www.webrtc-experiment.com/firebase.js"></script>
<script src="https://www.webrtc-experiment.com/RTCMultiConnection-v1.5.js"></script>
<script id="stream-script">
// Muaz Khan     - https://github.com/muaz-khan
// MIT License   - https://www.webrtc-experiment.com/licence/
// Documentation - https://github.com/muaz-khan/WebRTC-Experiment/tree/master/RTCMultiConnection

/*
In order to split this into 2 files, probably will have to...

*/
//alert(window.location);
(function(){
  channelName = window.location + "";
  var idx = channelName.lastIndexOf("/");
  channelName = channelName.substring(0,idx).replace( /\/|:|#|%|\.|\[|\]/g , '');
})();
//alert(channelName)

var connection = new RTCMultiConnection(channelName);
connection.session = {
  audio: true,
  video: true,
  oneway: true
};

connection.onstream = function(e) {
  e.mediaElement.width = 600;
  videosContainer.insertBefore(e.mediaElement, videosContainer.firstChild);
  scaleVideos();
};

connection.onstreamended = function(e) {
  e.mediaElement.style.opacity = 0;
  setTimeout(function() {
      if (e.mediaElement.parentNode) {
          e.mediaElement.parentNode.removeChild(e.mediaElement);
      }
      scaleVideos();
  }, 1000);
};

var sessions = { };
connection.onNewSession = function(session) {
  if (sessions[session.sessionid]) return;
  sessions[session.sessionid] = session;
  console.log("spotted a session with: " + session.extra['session-name']);
	//
	var sessionid = session.sessionid
  session = sessions[sessionid];
  if (!session) throw 'No such session exists.';
  connection.join(session);


};

var videosContainer = document.getElementById('videos-container') || document.body;
var roomsList = document.getElementById('rooms-list');

//this will not be included in the "view" page
document.getElementById('setup-new-broadcast').onclick = function() {
  this.disabled = true;
  connection.extra = {
      'session-name': 'Anonymous'
  };

  connection.open();
};

// setup signaling to search existing sessions
connection.connect();

function scaleVideos() {
  var videos = document.querySelectorAll('video'),
  length = videos.length, video;

  var minus = 130;
  var windowHeight = 700;
  var windowWidth = 600;
  var windowAspectRatio = windowWidth / windowHeight;
  var videoAspectRatio = 4 / 3;
  var blockAspectRatio;
  var tempVideoWidth = 0;
  var maxVideoWidth = 0;

  for (var i = length; i > 0; i--) {
      blockAspectRatio = i * videoAspectRatio / Math.ceil(length / i);
      if (blockAspectRatio <= windowAspectRatio) {
          tempVideoWidth = videoAspectRatio * windowHeight / Math.ceil(length / i);
      } else {
          tempVideoWidth = windowWidth / i;
      }
      if (tempVideoWidth > maxVideoWidth)
          maxVideoWidth = tempVideoWidth;
  }
  for (var i = 0; i < length; i++) {
      video = videos[i];
      if (video)
          video.width = maxVideoWidth - minus;
  }
}




window.onresize = scaleVideos;
</script>
<script type="application/json" id="bootstrapped_mods">
{
  "MODERATORS": <%= @page.moderators.map{|x| x.id }.to_json.html_safe %>
}
</script>
<script>
  $(document).ready(function(){
    var modsData = JSON.parse($("#bootstrapped_mods").html());
    var modsArrayIds = modsData["MODERATORS"];

    var tFun = function(event) {
      if (event.which == 13) {
        chatText(event);
      }
    };


    $(".chat-text-box").on("click","button",function(event){
      chatText(event);
    })
    $(".chat-textarea").on("keydown",tFun);

    $(".chat-window").on("click","a.username",function(event){
      event.preventDefault();
      $a = $(event.currentTarget);
      $div = $a.closest(".single-chat");
      var clickedUser = $div.attr("data-name");
      var clickedId = $div.attr("data-id");
      //create div to show username, and button to follow, link to channel and link to profile
      //div can have an id so that there's only one at a time? just change html
      //class toggle for visible/invisible?
      var $show = $("#chat-user-show");
      $show.addClass("chat-show-yes");
      $show.removeClass("chat-show-no");
      var htmlStr = "<div class='group chat-show-head'>";
      htmlStr = htmlStr + "<h2>" + clickedUser + "</h2><a class='close-show' href='#'>X</a></div>";
      if (clickedId*1 != CURRENT_USER_ID*1){
        htmlStr = htmlStr + "<div class='chat-show-follow'></div>";
      }
      if (CURRENT_USER_ID*1 == <%= @page.user_id %>){
        htmlStr = htmlStr + "<div class='mod-buttons' data-id='" + clickedId + "'>";
        htmlStr = htmlStr + "<button class='mod'>Make Moderator</button><button class='unmod'>Remove Moderator</button></div>";
      }

      if (modsArrayIds.indexOf(CURRENT_USER_ID) >= 0 || CURRENT_USER_ID == <%= @page.user_id %>){
        htmlStr = htmlStr + "<a href='#' class='silence-user' data-id='" + clickedUser + "'>Silence!</a>"
      }
      $show.html(htmlStr);
      if(modsArrayIds.indexOf(clickedId*1) >= 0){
        $(".mod").closest("div").addClass("can-unmod");
        $(".mod").closest("div").removeClass("can-mod");
      } else {
        $(".mod").closest("div").addClass("can-mod");
        $(".mod").closest("div").removeClass("can-unmod");
      }

      followFun(clickedId*1);

    })

    $("#chat-user-show").on("click","button.mod",function(event){
      event.preventDefault();
      var $modDiv = $(".mod-buttons");
      var userId = $modDiv.attr("data-id")*1;
      $modDiv.addClass("can-unmod");
      $modDiv.removeClass("can-mod");
      $.ajax({
        type:"POST",
        url:"/pages/<%= @page.id %>/moderators",
        data:{user_id: userId}
      })
      modsArrayIds.push(userId);
    })
    $("#chat-user-show").on("click","button.unmod",function(event){
      event.preventDefault();
      var $modDiv = $(".mod-buttons");
      var userId = $modDiv.attr("data-id")*1;
      $modDiv.addClass("can-mod");
      $modDiv.removeClass("can-unmod");
      $.ajax({
        type:"DELETE",
        url:"/pages/<%= @page.id %>/moderators/" + userId
      })
      var idx = modsArrayIds.indexOf(userId);
      modsArrayIds.splice(idx,1);
    })

    $(".chat-window").append("<div style='color:#b0b0b0;' >Welcome to the chat room!</div>")

    $("#chat-user-show").on("click","a.silence-user",function(event){
      event.preventDefault();
      $a = $(event.currentTarget);
      var username = $a.attr("data-id");
      $.ajax({
        type:"POST",
        url:"/chat_silence",
        data:{page_name: path, username: username},
        error: function(resp){
          if (resp){
            var $chatWindow = $(".chat-window")
            console.log(resp)
            $chatWindow.append("<div style='color:#b0b0b0;' >" + resp.responseText + "</div>");
            var h = $chatWindow[0].scrollHeight;
            $chatWindow.scrollTop(h);
          }
        }
      })
    });

    $("#chat-user-show").on("click","a.close-show",function(event){
      event.preventDefault();
      var $show = $("#chat-user-show");
      $show.html("");
      $show.removeClass("chat-show-yes");
      $show.addClass("chat-show-no");

    })

    var chatText = function(event){
      event.preventDefault();
      var $textArea = $(".chat-textarea");
      var text = $textArea.val();
      $textArea.val("");
      $(".chat-button").attr("disabled", "disabled");
      $(".chat-textarea").off("keydown",tFun);
      window.setTimeout(function(){
        $(".chat-button").removeAttr("disabled");
        $(".chat-textarea").on("keydown",tFun);
      },2000);
      $.ajax({
        type:"POST",
        url:"/chat",
        data:{text: text, page_name: path},
        success: function(resp){}
      })
    };




    var path = window.location.pathname;
    path = path.substring(1);
    var idx = path.lastIndexOf("/");
    path = path.substring(0,idx);

    var pusher = new Pusher('<%= ENV["PUSHER_KEY"] %>');
    var channel = pusher.subscribe(path);
    channel.bind('new', function(data) {
      var $chatWindow = $(".chat-window")
      $chatWindow.append(data);
      var h = $chatWindow[0].scrollHeight;
      $chatWindow.scrollTop(h);
    });
    channel.bind('silence', function(data){
      $(".chat-"+data).html("&lt;message deleted&gt;")
    });
  })
</script>