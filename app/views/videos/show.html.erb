<style>
.current-video{
  background-color:#ffff00;
}
</style>

<h1><%= @video.title %></h1>
THIS IS WHERE THE VIDEO WILL GO AGAIN
<hr>


<div class="comments-container"></div>
<hr>
<div class="all-videos">
  <% @videos.each do |video| %>
    <div class="<%= (video.id == @video.id) ? "current-video" : "" %>">
      <h2><%= video.title %></h2>
      <%= "<a href=#{video_url(video.id)} ><img src=#{h(video.thumbnail_url)} height=63 width=112></a>".html_safe %>
      <%= video.description %>
    </div>
  <% end %>
</div>
<div style="display:none" class="recursion-demo">
  <h2>Recursion Demo</h2>
  <p>
    The expandable/collapsible comments here are rendered with recursive calls
    to the same JST template!<br>
    <a href="#" class="light-box-link pseudo-button">OK</a>
  </p>
</div>
<div style="display:none" class="backbone-demo">
  <h2>Backbone Demo</h2>
  <p>
    The followings list on the side is sortable (try sorting users and then refreshing)!
    You can also make comments and delete your own comments here, and it all uses backbone!<br>
    <a href="#" class="light-box-link pseudo-button">OK</a>
  </p>
</div>
<div style="display:none" class="bootstrap-demo">
  <h2>Bootstrap Demo</h2>
  <p>
    The followings list on the side, as well as the comments and info about the users who
    made them is all bootstrapped into the page on its initial load!<br>
    <a href="#" class="light-box-link pseudo-button">OK</a>
  </p>
</div>
<script id="video-show-demo">
$(document).ready(function(){
  var fullUrl = window.location + "";
  var idx = fullUrl.lastIndexOf("#");
  if (idx >= 0){
    var demo = fullUrl.substring(idx+1);
    if (demo == "recursion"){
      var $body = $("body");
      $body.on("click","a.light-box-link",function(event){
        event.preventDefault();
        $(".dark-overlay").remove();
        $(".light-box").remove();
      })
      $body.append("<div class='dark-overlay'></div>");
      $body.append("<div class='light-box'></div>");
      $(".light-box").append($(".recursion-demo").html());


      //run jQuery code!
    } else if (demo == "backbone"){
      var $body = $("body");
      $body.on("click","a.light-box-link",function(event){
        event.preventDefault();
        $(".dark-overlay").remove();
        $(".light-box").remove();
      })
      $body.append("<div class='dark-overlay'></div>");
      $body.append("<div class='light-box'></div>");
      $(".light-box").append($(".backbone-demo").html());
    } else if (demo == "bootstrap"){
      var $body = $("body");
      $body.on("click","a.light-box-link",function(event){
        event.preventDefault();
        $(".dark-overlay").remove();
        $(".light-box").remove();
      })
      $body.append("<div class='dark-overlay'></div>");
      $body.append("<div class='light-box'></div>");
      $(".light-box").append($(".bootstrap-demo").html());
    }
  }

});
</script>
<script type="application/json" id="bootstrapped_comments">
{<% comments = @video.comments %>
  "COMMENTS": <%= comments.to_json.html_safe %>,
  "COMMENTS_BY_PARENT_ID": <%= @video.comments_by_parent_id.to_json.html_safe %>,
  "PAGES": <%= comments.map{ |x| Page.find_by_user_id(x.user_id).logo_url}.to_json.html_safe %>,
  "USERS": <%= comments.map{ |x| User.find(x.user_id).username }.to_json.html_safe %>,
  "MODERATORS": <%= User.find(@video.user_id).page.moderators.map{|x| x.id }.to_json.html_safe %>
}
</script>
<script>
$(document).ready(function(){
  //get some bootstrapped data!!
  var data = JSON.parse($("#bootstrapped_comments").html());
  videoId = <%= @video.id %>
  videoOwnerId = <%= @video.user_id %>
  TwitchClone.Collections.comments = new TwitchClone.Collections.Comments(data["COMMENTS"]);
  TwitchClone.Collections.comments.each(function(comment, index){
    comment.set({
      username: data["USERS"][index],
      page_logo_url: data["PAGES"][index]
    })
  });
  TwitchClone.Views.commentsIndex = new TwitchClone.Views.CommentsIndex({
    $el: $(".comments-container"),
    collection: TwitchClone.Collections.comments,
    comments_by_parent_id: data["COMMENTS_BY_PARENT_ID"],
    moderators: data["MODERATORS"]
  });
  TwitchClone.Views.commentsIndex.render();
});
</script>